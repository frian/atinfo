/* Welcome to Compass.
 * In this file you should write your main styles. (or centralize your imports)
 * Import this file using the following HTML or equivalent:
 * <link href="/stylesheets/screen.css" media="screen, projection" rel="stylesheet" type="text/css" /> */

@import "base";

/*
 * - FONTS --------------------------------------------------------------------
*/

@import url('https://fonts.googleapis.com/css?family=Muli|Gruppo');

@font-face {
    font-family: BebasNeue;
    font-weight: bold;
    src: url("/fonts/BebasNeue Regular.ttf") format("truetype");
}

@font-face {
    font-family: 'LeagueGothic';
    font-weight: normal;
    font-style: normal;
    src: url("/fonts/leaguegothic-condensed-regular-webfont.ttf") format("truetype");
}

$bg-color: #eee;

$main-font: 'Gruppo', sans-serif;


html,
body {
    height: 100%;
}

body {
    background-color: $bg-color;
    overflow: hidden;
    // background: url('/img/bg.png');
}

a {
    text-decoration: none;
}

a.index {
    color: #fff;
}

.text-center {
    text-align: center
}




@import "index";
@import "services";



$topBarHeight : 40px;

.screenTopBar {
	position : absolute;
	top : 0;
	width : 100%;
	display : block!important;
	height : $topBarHeight;
	background-color : #f0f0f0;
	border-bottom : 1px solid white;
/* 	@include debug(white); */
}

ul.menu {
    display: table;
    // @include debug(red);
}

ul.menu li {
    display: table-cell;
    padding: 0 10px;
    height : $topBarHeight;
	line-height : $topBarHeight;
}

ul.menu li a {
    color: #333;
    font-family: 'Muli', sans-serif;
}

.screen {
	display : table;
	width : 100%;
	height : 100% !important;
	font-family: $main-font;
	font-size : 100%;
    @include debug(red);
}

.cell {
	width : 100%!important;
	display : table-cell;
    vertical-align: middle;

}


#contact .page {
    @include debug(red);
    line-height: 2em;
    text-align: left;
    // font-size: 200%;
}


/*
	-- SERVICES ------------------------------------------------------------------
*/




.droplet {
  border-radius: 50% 90% 10% 95%;
  border-top: 2px solid $bg-color;
  border-right: 2px solid $bg-color;
  height: 50px;
  margin: auto;
  width: 50px;
  position: absolute;
  top: 0px;
  left: 0px;
  /* top: 50%;
    right: 50%;*/
  transform-origin: left top;
  opacity: 0;
}



$bgGrey1: #fff;
$bgGrey2: #ddd;

@mixin defineAnim($color, $delay, $anim) {
    // background: $color;
    animation: #{$anim} 8s ease-out;
    animation-fill-mode: forwards;
    animation-delay: #{$delay}s;
}

$delayStep: 0;
$currentDelay: 0;

@for $i from 1 through 19 {
    #no#{$i} { @include defineAnim($bgGrey1, $currentDelay, "spin#{$i}") }
}


$bgColor1: #0ac;
$bgColor2: #0072BC;

$centerSize: 20px;
#center {
    position: absolute;
    border: 2px solid $bg-color;
    background-color: $bgColor2;
    width: $centerSize;
    height: $centerSize;
    top: -$centerSize / 2;
    left: -$centerSize / 2;
    z-index: 20;
    @include border-radius($centerSize);
    display: none;

}

#trunk {
    width: 4px;
    height: 10px;
    background-color: black;
    position: relative;
    top: 500px;
    left: -2px;
    animation: grow 2s ease-out;
    animation-fill-mode: forwards;
    animation-delay: 0s;
}

.leaf {
    border-radius: 1% 90%;
    border-style: solid;
    border-width: 2px;
    border-color: $bg-color;
    height: 100px;
    margin: auto;
    width: 100px;
    position: absolute;
    left: 0px;
    /* top: 50%;
      right: 50%;*/
    transform-origin: left top;

    background-color: #080;
}

#leaf1 {
    top: 500px;
    @include transform(rotateZ(180deg));
    animation: leafGrow1 4s ease-out;
    animation-fill-mode: forwards;
    animation-delay: 0s;
}

#leaf2 {
    top: 500px;
    @include transform(rotateX(180deg) scale(0.01));
    animation: leafGrow2 4s ease-out;
    animation-fill-mode: forwards;
    animation-delay: 1s;
}

#leaf3 {
    top: 350px;
    left: 2px;
    @include transform(rotateZ(180deg) scale(0.01));
    animation: leafGrow3 4s ease-out;
    animation-fill-mode: forwards;
    animation-delay: 2s;
}

#leaf4 {
    top: 250px;
    left: -2px;
    @include transform(rotateX(180deg) scale(0.01));
    animation: leafGrow4 4s ease-out;
    animation-fill-mode: forwards;
    animation-delay: 3s;
}

$offsetAngle: -5deg;

// $spinAngle:   270deg;
// $spin2Angle:  240deg;
// $spin3Angle:  210deg;
// $spin4Angle:  180deg;
// $spin5Angle:  150deg;
// $spin6Angle:  120deg;
// $spin7Angle:   90deg;
// $spin8Angle:   60deg;
// $spin9Angle:   30deg;

// $spinAngle:   270deg;
// $spin2Angle:  255deg;
// $spin3Angle:  240deg;
// $spin4Angle:  225deg;
// $spin5Angle:  210deg;
// $spin6Angle:  195deg;
// $spin7Angle:  180deg;
// $spin8Angle:  165deg;
// $spin9Angle:  150deg;
// $spin10Angle: 135deg;
// $spin11Angle: 120deg;
// $spin12Angle: 105deg;
// $spin13Angle:  90deg;
// $spin14Angle:  75deg;
// $spin15Angle:  60deg;
// $spin16Angle:  45deg;
// $spin17Angle:  30deg;
// $spin18Angle:  15deg;



$spin1Angle:   360deg;
$spin2Angle:  340deg;
$spin3Angle:  320deg;
$spin4Angle:  300deg;
$spin5Angle:  280deg;
$spin6Angle:  260deg;
$spin7Angle:  240deg;
$spin8Angle:  220deg;
$spin9Angle:  200deg;
$spin10Angle: 180deg;
$spin11Angle: 160deg;
$spin12Angle: 140deg;
$spin13Angle:  120deg;
$spin14Angle:  100deg;
$spin15Angle:  80deg;
$spin16Angle:  60deg;
$spin17Angle:  40deg;
$spin18Angle:  20deg;

$startScale: 0.01;

$fullScale: 2;
$step: 0;

$currentScale: 2;

@mixin animStart {
    opacity: 0;
    @include transform(rotate($offsetAngle) scale($startScale));
}

@mixin animEnd($angle,$scale) {
    opacity: 1;
    @include transform(rotate($angle) scale($scale));
}


@mixin createAnim($name, $angle, $scale, $startColor, $endColor) {

    @keyframes #{$name} {
        0% {
            @include animStart;
        }
        50% {
            @include animEnd($angle, 0.5);
            background-color: $startColor;
        }
        60% {
            @include animEnd($angle, 0.5);
            background-color: $endColor;
        }
        100% {
            @include animEnd($angle, $scale);
            background-color: $endColor;
            opacity: 0.5;
        }
    }
}


// @for $i from 1 through 2 {
//     @include createAnim("spin#{$i}", $offsetAngle - $spin#{$i}Angle, $currentScale, $bgGrey1, $bgColor1);
// }


@include createAnim("spin1", $offsetAngle - $spin1Angle, $currentScale, $bgGrey1, $bgColor1);

$currentScale: $currentScale - $step;

@include createAnim("spin2", $offsetAngle - $spin2Angle, $currentScale - $step, $bgGrey2, $bgColor2);

$currentScale: $currentScale - $step;

@include createAnim("spin3", $offsetAngle - $spin3Angle, $currentScale - $step, $bgGrey1, $bgColor1);

$currentScale: $currentScale - $step;

@include createAnim("spin4", $offsetAngle - $spin4Angle, $currentScale, $bgGrey2, $bgColor2);

$currentScale: $currentScale - $step;

@include createAnim("spin5", $offsetAngle - $spin5Angle, $currentScale, $bgGrey1, $bgColor1);

$currentScale: $currentScale - $step;

@include createAnim("spin6", $offsetAngle - $spin6Angle, $currentScale, $bgGrey2, $bgColor2);

$currentScale: $currentScale - $step;

@include createAnim("spin7", $offsetAngle - $spin7Angle, $currentScale, $bgGrey1, $bgColor1);

$currentScale: $currentScale - $step;

@include createAnim("spin8", $offsetAngle - $spin8Angle, $currentScale, $bgGrey2, $bgColor2);

$currentScale: $currentScale - $step;

@include createAnim("spin9", $offsetAngle - $spin9Angle, $currentScale, $bgGrey1, $bgColor1);

$currentScale: $currentScale - $step;

@include createAnim("spin10", $offsetAngle - $spin10Angle, $currentScale, $bgGrey2, $bgColor2);

$currentScale: $currentScale - $step;

@include createAnim("spin11", $offsetAngle - $spin11Angle, $currentScale, $bgGrey1, $bgColor1);

$currentScale: $currentScale - $step;

@include createAnim("spin12", $offsetAngle - $spin12Angle, $currentScale, $bgGrey2, $bgColor2);

$currentScale: $currentScale - $step;

@include createAnim("spin13", $offsetAngle - $spin13Angle, $currentScale, $bgGrey1, $bgColor1);

$currentScale: $currentScale - $step;

@include createAnim("spin14", $offsetAngle - $spin14Angle, $currentScale, $bgGrey2, $bgColor2);

$currentScale: $currentScale - $step;

@include createAnim("spin15", $offsetAngle - $spin15Angle, $currentScale, $bgGrey1, $bgColor1);

$currentScale: $currentScale - $step;

@include createAnim("spin16", $offsetAngle - $spin16Angle, $currentScale, $bgGrey2, $bgColor2);

$currentScale: $currentScale - $step;

@include createAnim("spin17", $offsetAngle - $spin17Angle, $currentScale, $bgGrey1, $bgColor1);

$currentScale: $currentScale - $step;

@include createAnim("spin18", $offsetAngle - $spin18Angle, $currentScale, $bgGrey2, $bgColor2);







$currentScale: $currentScale - $step;

@include createAnim("spin19", $offsetAngle, $currentScale, $bgGrey1, $bgColor1);




@keyframes grow {
    from {
        height: 0px;
    }
    to {
        top: 50px;
        height: 450px;
    }
}

@keyframes leafGrow1 {
    from {
        @include transform(scale(0.01) rotateZ(180deg));

    }
    to {
        @include transform(scale(1) rotateZ(180deg));
    }
}

@keyframes leafGrow2 {
    from {
        @include transform(scale(0.01) rotateX(180deg));

    }
    to {
        @include transform(scale(1) rotateX(180deg));
    }
}

@keyframes leafGrow3 {
    from {
        @include transform(scale(0.01) rotateX(180deg));

    }
    to {
        @include transform(scale(0.8) rotateX(180deg));
    }
}

@keyframes leafGrow4 {
    from {
        @include transform(scale(0.01) rotateZ(180deg));

    }
    to {
        @include transform(scale(0.6) rotateZ(180deg));
    }
}


/*
	-- FORMS ---------------------------------------------------------------------
*/

[type="text"], [type="email"], textarea {

	font-family : Muli;
	color : #222;
	background-color : $bg-color;
    border: none;
    border-bottom: solid 1px #ccc;
    @include box-shadow(none);
}


[type="text"]:focus, [type="email"]:focus, textarea:focus {
	background-color : $bg-color;
}

textarea {
    width: 100%;
}

.formErrors {
    color: red;
    font-size: 80%;
    line-height: 1em;
}

@media all and (min-width: 40em) {

    #contact .page, #services .page {
        font-size: 200%;
        width: 600px;
        margin: auto;
    }

    [type="text"], [type="email"], textarea {
        font-size: 70%;
    }
}
