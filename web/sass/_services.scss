// @import "base";
// @import "common";

$YOffset : 50px;
$XOffset : 20px;

$servicesContentSize: 200px;                                        // 200

$maskMargin: $servicesContentSize / 2;                              // 100

$trunkMaskWidth: $servicesContentSize / 10;                         //  50

$trunkMaskTopMargin: $servicesContentSize + $maskMargin - $YOffset; // 700
$trunkMaskStartTopMargin: $maskMargin - $YOffset;                   // 200

$trunkMaskLeftMargin: ($servicesContentSize / 2) + $trunkMaskWidth; // 270

$servicesContentTextSize: $servicesContentSize * 3 / 4;             // 150

$leafSize: $servicesContentSize / 5;                                //  40

$leaf3Margin: $servicesContentSize / 10 * 3;                        //  60
$leaf4Margin: $servicesContentSize / 2;                             // 100

$bigStemSize: $servicesContentSize / 4;                             //  50

$stemSize: $bigStemSize / 5;                                        //  10

$stemWidth : $bigStemSize / 10;                                     //   5

$centerSize : $leafSize / 2;                                        //  20


/*
	-- TOP AND BOTTOM MASKS ------------------------------------------------------
*/
.mask {
    position:          absolute;
    top:                    50%;
    width:                 100%;
    height:                100%;
    background-color: $bg-color;
    z-index:                 10;
}

#mask {
    margin-top: $maskMargin + $YOffset;
}

#mask2 {
    margin-top: - $maskMargin + $YOffset;
    transform-origin: 0% 0%;
    @include transform(rotateX(180deg)  );
}

.mask2Container {
    @include transform(rotateX(180deg));
}


/*
	-- CONTENT -------------------------------------------------------------------
*/
#servicesContent {
    @include abs-centered();
    height:                         $servicesContentSize;
    width:                          $servicesContentSize;
    margin-top:  - ($servicesContentSize / 2) + $YOffset;
    margin-left: - ($servicesContentSize / 2) + $XOffset;
}

#servicesContentText {

    position:               absolute;
    right:                         0;
    bottom:                        0;
    width:  $servicesContentTextSize;
    height: $servicesContentTextSize;
    font-size:                  34px;
}


/*
	-- INDEX SPANS ---------------------------------------------------------------
*/
.indexSpan {
    font-family: 'gruppo';
    position: relative;
    // display: inline-block;
}

#indexSpan1, #indexSpan3 {
    color: #888;
}

#indexSpan3 {
    top: -10px;
}

#indexSpan4 {
    top: -8px;
    color: #0a0;
    font-size: 60px;
}


// animation
@mixin defineIndexSpanAnim($anim, $delay) {
    @include animation("#{$anim} 6s ease-out forwards");
}

@for $i from 1 through 4 {
    #indexSpan#{$i} { @include defineIndexSpanAnim( "indexSpan#{$i}", $i - 1 ) }
}

@mixin createIndexSpanAnim($name, $start) {

    @include keyframes(#{$name}) {
        0% {
            @include opacity(0);
        }

        #{$start}0% {
            @include opacity(0);
        }
        #{$start + 4}0% {
            @include opacity(1);
        }

        100% {
            @include opacity(1);
        }
    }
}


@for $i from 1 through 4 {
    @include createIndexSpanAnim("indexSpan#{$i}", $i + 2);
}


#servicesFlowerContainer {
    position: relative;
    width:           0;
    height:       100%;
}


/*
	-- TRUNK ---------------------------------------------------------------------
*/

$trunkRadius: 2000px;

#trunk {
  height: $trunkRadius;
  width: $trunkRadius;
  border: 2px solid #333;
  margin-left: -105px  + $XOffset;
  margin-top: -($trunkRadius / 2) + $YOffset;
  @include border-left-radius($trunkRadius);
  @include abs-centered();
}

/* -- TRUNK MASK -- */
#trunkMask {
    height:           $servicesContentSize;
    width:                 $trunkMaskWidth;
    margin-top:      - $trunkMaskTopMargin;
    margin-left:    - $trunkMaskLeftMargin + $XOffset + 5;
    background-color:            $bg-color;
    @include abs-centered();
    @include animation('growTrunk 2s linear forwards');
    // @include debug(red);
}

@include keyframes(growTrunk) {
  0%   { margin-top: -50px; }
  100% { margin-top: -300px; }
}


/*
	-- LEAVES --------------------------------------------------------------------
*/
.leaf {
    position:     absolute;
    height:      $leafSize;
    width:       $leafSize;
    border: 1px solid #070;
    @include border-radius(1% 80% 1% 90%);
    margin:           auto;
    left:              0px;
    transform-origin: left top;
    background-color: #080;
}

#leaf1 {
    bottom: - $leafSize + 1;
    left: -5px;
    @include transform(rotateZ(180deg));
    @include animation('leafGrow1 6s ease-out forwards');
}

#leaf2 {
    bottom: - $leafSize + 1;
    left: 6px;
    @include transform(rotateX(180deg));
    @include animation('leafGrow2 6s ease-out forwards');
}

#leaf3 {
    bottom: - $leafSize + $leaf3Margin;
    left: -8px;
    @include transform(rotateZ(180deg) scale(0.8));
    @include animation('leafGrow3 6s ease-out forwards');
}

#leaf4 {
    bottom: - $leafSize + $leaf4Margin;
    left: 0px;
    @include transform(rotateX(180deg) scale(0.6));
    @include animation('leafGrow4 6s ease-out forwards');
}


@include keyframes(leafGrow1) {
    0% {
        @include transform(scale(0.01) rotateZ(180deg));
        @include opacity(1);
    }
    66.66% {
        @include transform(scale(1) rotateZ(180deg));
        @include opacity(1);
    }
    100% {
        @include transform(scale(1) rotateZ(180deg));
        @include opacity(1);
    }
}
@include keyframes(leafGrow2) {
    0% {
        @include transform(scale(0.01) rotateX(180deg));
        @include opacity(1);
    }
    16.66% {
        @include transform(scale(0.01) rotateX(180deg));
        @include opacity(1);
    }
    100% {
        @include transform(scale(1) rotateX(180deg));
        @include opacity(1);
    }
}
@include keyframes(leafGrow3) {
    0% {
        @include transform(scale(0.01) rotateZ(180deg));
        @include opacity(1);
    }
    33.33% {
        @include transform(scale(0.01) rotateZ(180deg));
        @include opacity(1);
    }
    83.33% {
        @include transform(scale(0.8) rotateZ(180deg));
        @include opacity(1);
    }
    100% {
        @include transform(scale(0.8) rotateZ(180deg));
        @include opacity(1);
    }
}
@include keyframes(leafGrow4) {
    0%{
        @include transform(scale(0.01) rotateX(180deg));
        @include opacity(1);
    }
    50% {
        @include transform(scale(0.01) rotateX(180deg));
        @include opacity(1);
    }
    100% {
        @include transform(scale(0.6) rotateX(180deg));
        @include opacity(1);
    }
}

$stemColor: #070; // #070

#bigStem {
    position:         absolute;
    width:        $bigStemSize;
    height:         $stemWidth;
    left:                -13px;
    top:                   8px;
    border-radius:         50%;
    border-top: 2px solid #090;
    @include transform(rotateZ(40deg));
}

.stem {
    position:        absolute;
    width:         $stemWidth;
    height:         $stemSize;
    border-radius:        50%;
    border-left: 1px solid $stemColor;
}

.stem1 {
    left: 7px;
    top: 7px;
    @include transform(rotateZ(20deg));
}

.stem2 {
    left: 20px;
    top: 7px;
    @include transform(rotateZ(60deg));
}

.stem3 {
    left: 22px;
    top: 20px;
    @include transform(rotateZ(20deg));
}


/*
	-- CENTER --------------------------------------------------------------------
*/
#serviceCenter {
    position:          absolute;
    width:          $centerSize;
    height:         $centerSize;
    top:      - $centerSize / 2;
    left:     - $centerSize / 2;
    border: 2px solid $bg-color;
    background-color:     black;
    z-index:                 50;
    @include border-radius($centerSize);
    @include animation('centerGrow 4s ease-out forwards');
}

@include keyframes(centerGrow) {
    0% {
        @include transform(scale(0));
    }
    50% {
        @include transform(scale(0));
    }
    100% {
        @include transform(scale(1));
    }
}


/*
	-- PETALS --------------------------------------------------------------------
*/
.servicePetal {
    position:                 absolute;
    top:                           1px;
    left:                          3px;
    height:                  $leafSize;
    width:                   $leafSize;
    border-radius:     50% 90% 10% 95%;
    border-bottom: 2px solid $bg-color;
    border-left:   2px solid $bg-color;
    margin:                       auto;
    transform-origin:         left top;
    opacity:                       0.6;
    z-index:                        20;
    background-color:              red;
}


// start angle
$serviceAngleOffset: 245deg;
$serviceAngleStep: 20deg;


// petal angles
$serviceSpin1Angle:  $serviceAngleStep * 18;
$serviceSpin2Angle:  $serviceAngleStep * 17;
$serviceSpin3Angle:  $serviceAngleStep * 16;
$serviceSpin4Angle:  $serviceAngleStep * 15;
$serviceSpin5Angle:  $serviceAngleStep * 14;
$serviceSpin6Angle:  $serviceAngleStep * 13;
$serviceSpin7Angle:  $serviceAngleStep * 12;
$serviceSpin8Angle:  $serviceAngleStep * 11;
$serviceSpin9Angle:  $serviceAngleStep * 10;
$serviceSpin10Angle: $serviceAngleStep * 9;
$serviceSpin11Angle: $serviceAngleStep * 8;
$serviceSpin12Angle: $serviceAngleStep * 7;
$serviceSpin13Angle: $serviceAngleStep * 6;
$serviceSpin14Angle: $serviceAngleStep * 5;
$serviceSpin15Angle: $serviceAngleStep * 4;
$serviceSpin16Angle: $serviceAngleStep * 3;
$serviceSpin17Angle: $serviceAngleStep * 2;
$serviceSpin18Angle: $serviceAngleStep;


// animation
@mixin defineServicePetalAnim($anim) {
    @include animation("#{$anim} 6s ease-out forwards");
}

// create petal ids and add animation
@for $i from 101 through 118 {
    $index: $i - 100;
    #servicePetal#{$i} {
        @include defineServicePetalAnim( "spin#{$i}");
        @include transform( rotate($serviceAngleOffset - (( 19 - $index  ) * 20) ) scale(1));
        background-color: hsl(($index - 1) * 20, 100%, 50%)
    }
}


@mixin serviceAnimStart {
    opacity: 0;
    @include transform(rotate($serviceAngleOffset) scale(0.01));
}

@mixin serviceAnimEnd($angle,$scale) {
    opacity: 0.3;
    @include transform(rotate($angle) scale($scale));
}

@mixin createServiceAnim($name, $angle, $startColor, $endColor) {

    @include keyframes(#{$name}) {
        0% {
            @include serviceAnimStart;
            background-color: $startColor;
        }
        40% {
            @include serviceAnimStart;
            background-color: $startColor;        }
        80% {
            @include serviceAnimEnd($angle, 0.5);
            background-color: $startColor;
        }
        90% {
            @include serviceAnimEnd($angle, 0.5);
            background-color: $endColor;
        }
        100% {
            @include serviceAnimEnd($angle, 1);
            background-color: $endColor;
            opacity: 0.6;
        }
    }
}

@include createServiceAnim("spin101", $serviceAngleOffset - $serviceSpin1Angle, $bgGrey1, hsl(0, 100%, 50%));
@include createServiceAnim("spin102", $serviceAngleOffset - $serviceSpin2Angle, $bgGrey2, hsl(20, 100%, 50%));
@include createServiceAnim("spin103", $serviceAngleOffset - $serviceSpin3Angle, $bgGrey1, hsl(40, 100%, 50%));
@include createServiceAnim("spin104", $serviceAngleOffset - $serviceSpin4Angle, $bgGrey2, hsl(60, 100%, 50%));
@include createServiceAnim("spin105", $serviceAngleOffset - $serviceSpin5Angle, $bgGrey1, hsl(80, 100%, 50%));
@include createServiceAnim("spin106", $serviceAngleOffset - $serviceSpin6Angle, $bgGrey2, hsl(100, 100%, 50%));
@include createServiceAnim("spin107", $serviceAngleOffset - $serviceSpin7Angle, $bgGrey1, hsl(120, 100%, 50%));
@include createServiceAnim("spin108", $serviceAngleOffset - $serviceSpin8Angle, $bgGrey2, hsl(140, 100%, 50%));
@include createServiceAnim("spin109", $serviceAngleOffset - $serviceSpin9Angle, $bgGrey1, hsl(160, 100%, 50%));
@include createServiceAnim("spin110", $serviceAngleOffset - $serviceSpin10Angle, $bgGrey2, hsl(180, 100%, 50%));
@include createServiceAnim("spin111", $serviceAngleOffset - $serviceSpin11Angle, $bgGrey1, hsl(200, 100%, 50%));
@include createServiceAnim("spin112", $serviceAngleOffset - $serviceSpin12Angle, $bgGrey2, hsl(220, 100%, 50%));
@include createServiceAnim("spin113", $serviceAngleOffset - $serviceSpin13Angle, $bgGrey1, hsl(240, 100%, 50%));
@include createServiceAnim("spin114", $serviceAngleOffset - $serviceSpin14Angle, $bgGrey2, hsl(260, 100%, 50%));
@include createServiceAnim("spin115", $serviceAngleOffset - $serviceSpin15Angle, $bgGrey1, hsl(280, 100%, 50%));
@include createServiceAnim("spin116", $serviceAngleOffset - $serviceSpin16Angle, $bgGrey2, hsl(300, 100%, 50%));
@include createServiceAnim("spin117", $serviceAngleOffset - $serviceSpin17Angle, $bgGrey1, hsl(320, 100%, 50%));
@include createServiceAnim("spin118", $serviceAngleOffset - $serviceSpin18Angle, $bgGrey2, hsl(340, 100%, 50%));


@media all and (min-width: $breakpoint) and (min-height: $breakpoint) {

    @import "services_bp_1";
}
